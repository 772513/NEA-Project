__init__.py

    Benefits of Sorting Code Into Packages:
        
        1   Improves Code Organisation
            -   as your flask app grows, it can become difficult to manage everything in a single file,
                by using a package, you can split your application into multiple modules that are logically organised
            -   you can seperate different parts of your app:
                -   routes
                -   models 
                -   forms 
                -   utilities
                into different files and keep the codebase clean and easy to maintain
        
        2   Scalability
            -   by organising your flask app as a package, you can easily scale it into larger applications by adding
                new modules and sub-packages without cluttering a single file
            =   makes it easy to manage complex applications and add new features without things becoming chaotic
        
        3   Reusability
            -   you can treat your app as a module or a collection of modules that you can import into other projects
            =   sharing functionality across projects without re-writing code, improving development efficiency
        
        4   Better Configuration Management
            -   you can keep configuration settings in a dedicated module:
                -   config.py
                or use different configuration classes for different environments:
                -   development
                -   testing
                -   production
            =   clean and centralised management of settings, simplifying configurations for differnt environment
        
        5   Blueprints for Modular Design
            -   allows you to define routes and handlers in seperate modules and then register them with the main app
            =   you can use blueprings to modularise different parts of your app e.g.:
                -   admin interface
                -   authentication etc.
                and register them later

        6   Easier testing
            -   easier to write unit tests and integration tests
            -   isolate different parts of the app and test them independently
            =   tests are more manageable and meaningful, improving code quality and making it easier to catch bugs
        
        7   Seperation of Concerns
            -   you can seperate different concerns of the application into their own modules:
                -   routes
                -   views
                -   database models
                -   static files
                -   templates
                making each part of the app more focused and easier to maintain
            =   application becomes more modular, making it easier to maintain and extend over time
        
        8   Enhanced Maintainability
            -   reduced complexity and imporved maintainability
            -   easier to update specific parts of the application without affecting other parts
            =   Long-term maintainability is much easier when your code is organised

    Summary of Benefits:

        -   Improved Code Organization: 
                Keeps related files together, making it easier to navigate and manage.
        
        -   Scalability: 
                Makes it easier to scale the app as it grows in size and complexity.
        
        -   Reusability: 
                You can reuse the app or components across different projects.
        
        -   Better Configuration Management: 
                Easily manage configurations for different environments.
        
        -   Modular Design: 
                Use Blueprints to separate different parts of the application, making it easier to add new features.
        
        -   Easier Testing: 
                Modular structure makes testing more manageable.
        
        -   Collaboration: 
                Easier for teams to work on different parts of the app simultaneously.
        
        -   Separation of Concerns: 
                Keeps the app's various components isolated and focused on specific tasks.
        
        -   Maintainability:       
                Helps ensure that the app is easier to maintain and extend in the long term.


.